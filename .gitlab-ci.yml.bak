image: registry.gitlab.com/ericksuryadinata/informatika-service:latest
services:
  - mysql:5.7
variables:
  MYSQL_DATABASE: homestead
  MYSQL_ROOT_PASSWORD: secret
  DB_HOST: mysql
  DB_USERNAME: root

stages:
  - preparation
  - building
  - testing
  - security
  - deploy


cache:
  key: "$CI_JOB_NAME-$CI_COMMIT_REF_SLUG"

composer:
  stage: preparation
  services:
    - mysql:5.7
  script:
    - php -v
    - composer install --prefer-dist --no-ansi --no-interaction --no-progress --no-scripts
    - cp .env.example .env
    - php artisan key:generate
  artifacts:
    paths:
      - vendor/
      - .env
    expire_in: 1 days
    when: always
  cache:
    paths:
      - vendor/

db-seeding:
  stage: building
  services:
    - mysql:5.7
  # Download the artifacts for these jobs
  dependencies:
    - composer
  script:
    - php artisan migrate:fresh --seed
  artifacts:
    paths:
      - ./storage/logs # for debugging
    expire_in: 1 days
    when: on_failure

phpunit:
  stage: testing
  services:
    - mysql:5.7
  # Download the artifacts for these jobs
  dependencies:
    - composer
    - db-seeding
  script:
    - php -v
    # - cp /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini /usr/local/etc/php/conf.d/docker-php-ext-xdebug.bak
    # - echo "" | sudo tee /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini
    - ./vendor/phpunit/phpunit/phpunit --version
    - php -d short_open_tag=off ./vendor/phpunit/phpunit/phpunit -v --colors=never --stderr
    # - cp /usr/local/etc/php/conf.d/docker-php-ext-xdebug.bak /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini
  artifacts:
    paths:
      - ./storage/logs # for debugging
    expire_in: 1 days
    when: on_failure

# codestyle:
#   stage: testing
#   image: lorisleiva/laravel-docker
#   script:
#     - phpcs --standard=PSR2 --extensions=php app
#   dependencies: []

# phpcpd:
#   stage: testing
#   script:
#     - test -f phpcpd.phar || curl -L https://phar.phpunit.de/phpcpd.phar -o phpcpd.phar
#     - php phpcpd.phar app/ --min-lines=50
#   dependencies: []
#   cache:
#     paths:
#       - phpcpd.phar

sensiolabs:
  stage: security
  script:
    - test -d security-checker || git clone https://github.com/sensiolabs/security-checker.git
    - cd security-checker
    - composer install
    - php security-checker security:check ../composer.lock
  dependencies: []
  cache:
    paths:
      - security-checker/

# unit_test:
#   stage: testing
#   image: registry.gitlab.com/ericksuryadinata/informatika-service:latest
#   script:
#     - composer install
#     - cp .env.example .env
#     - php artisan key:generate
#     - php artisan migrate
#     - vendor/bin/phpunit

deploy_production:
  stage: deploy
  script:
    - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
    - eval $(ssh-agent -s)
    - ssh-add <(echo "$informatika_service_bot")
    - mkdir -p ~/.ssh
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
    - ~/.composer/vendor/bin/envoy run deploy
  environment:
    name: production
    url: http://bot.labtif-untagsby.com
  when: on_success
  only:
    - master
